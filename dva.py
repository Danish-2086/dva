# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sun Jan 21 01:59:33 2024
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))